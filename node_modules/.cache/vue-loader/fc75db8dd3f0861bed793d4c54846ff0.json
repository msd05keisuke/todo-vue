{"remainingRequest":"/Users/k19097kk/Desktop/todo-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/k19097kk/Desktop/todo-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/k19097kk/Desktop/todo-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/k19097kk/Desktop/todo-vue/src/components/TodoList.vue?vue&type=template&id=3de47834&","dependencies":[{"path":"/Users/k19097kk/Desktop/todo-vue/src/components/TodoList.vue","mtime":1626097362785},{"path":"/Users/k19097kk/Desktop/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k19097kk/Desktop/todo-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/k19097kk/Desktop/todo-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/k19097kk/Desktop/todo-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}